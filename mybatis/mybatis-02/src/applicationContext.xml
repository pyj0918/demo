<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 1.数据源：DriverManagerDataSource -->
	<bean id="datasource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/study-mybatis" />
		<property name="username" value="root" />
		<property name="password" value="123" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
	</bean>

	<!-- 2.mybatis的SqlSession的工厂：SqlSessionFactoryBean dataSource:引用数据源 typeAliasesPackage:指定实体类的包名，自动将实体类的简单类名映射成别名 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="typeAliasesPackage" value="com.test.entity" />
	</bean>

	<!-- 3.mybatis自动扫描加载sql映射文件/接口：MapperScannerConfigurer basePackage:指定sql映射文件/接口所在的包（自动扫描） 
		sqlSessionFactory:引用上面定义的sqlSessionFactory -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.test.mapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 4.事务管理:DataSourceTransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource" />
	</bean>

	<!-- 5.使用声明式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
</beans>


