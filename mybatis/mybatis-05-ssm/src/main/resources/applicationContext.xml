<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:component-scan base-package="com.test.service,com.test.dao" />

	<context:property-placeholder location="classpath:config.properties" />

	<!-- 1.数据源：DriverManagerDataSource -->
	<bean id="datasource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize" value="${initialSize}" />
		<property name="maxTotal" value="${maxTotal}" />
		<property name="maxIdle" value="${maxIdle}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxWaitMillis" value="${maxWait}" />
	</bean>

	<!-- 2.mybatis的SqlSession的工厂：SqlSessionFactoryBean dataSource:引用数据源 typeAliasesPackage:指定实体类的包名，自动将实体类的简单类名映射成别名 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<property name="typeAliasesPackage" value="com.test.entity" />
		<property name="mapperLocations" value="classpath:com/test/mapper/*.xml" />
	</bean>

	<!-- 3.事务管理:DataSourceTransactionManager -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource" />
	</bean>

	<!-- 4.使用声明式事务 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<!-- 5.使用sqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
		<!-- 如果想要进行批量操作可加入这个属性 -->
		<!-- SIMPLE REUSE BATCH -->
		<constructor-arg index="1" value="REUSE" />
	</bean>
</beans>


